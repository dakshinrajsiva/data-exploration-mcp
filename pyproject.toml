[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "data-exploration-mcp"
version = "1.0.0"
description = "Dynamic data analysis MCP server for technical interviews with advanced memory optimization"
authors = [{name = "Dakshin Raj Siva", email = "dakshin@example.com"}]
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Office/Business :: Financial :: Spreadsheet",
]
dependencies = [
    "mcp>=1.0.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "plotly>=5.15.0",
    "seaborn>=0.12.0",
    "matplotlib>=3.7.0",
    "scipy>=1.11.0",
    "statsmodels>=0.14.0",
    "duckdb>=0.9.0",
    "polars>=0.20.0",
    "pyarrow>=10.0.0",
    "openpyxl>=3.1.0",
    "xlrd>=2.0.0",
    "fastapi>=0.100.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
    "pydantic>=2.0.0",
    "tqdm>=4.65.0",
    "psutil>=5.9.0",
    "memory-profiler>=0.61.0",
    "py-spy>=0.3.14",
    "pympler>=0.9",
    "guppy3>=3.1.3",
    "objgraph>=3.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]
performance = [
    "numba>=0.58.0",
    "cython>=3.0.0",
    "bottleneck>=1.3.7",
    "numexpr>=2.8.5",
]
visualization = [
    "bokeh>=3.2.0",
    "altair>=5.0.0",
    "dash>=2.14.0",
    "streamlit>=1.25.0",
]

[project.urls]
"Homepage" = "https://github.com/veeam-candidate/interview-analyzer"
"Bug Reports" = "https://github.com/veeam-candidate/interview-analyzer/issues"
"Source" = "https://github.com/veeam-candidate/interview-analyzer"

[project.scripts]
interview-analyzer = "src.main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=src --cov-report=term-missing --cov-report=html"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
